[{"/code/src/index.js":"1","/code/src/reportWebVitals.js":"2","/code/src/components/App.js":"3","/code/src/redux/store.js":"4","/code/src/redux/reducers/index.js":"5","/code/src/components/pages/Splash/index.js":"6","/code/src/components/pages/Splash/Splash.jsx":"7","/code/src/components/pages/Home/index.js":"8","/code/src/components/pages/Home/Home.jsx":"9","/code/src/components/pages/index.js":"10","/code/src/components/layouts/Header/index.js":"11","/code/src/components/layouts/Header/Header.jsx":"12","/code/src/components/layouts/index.js":"13","/code/src/components/layouts/Dropdown/index.js":"14","/code/src/components/layouts/Dropdown/Dropdown.jsx":"15","/code/src/components/layouts/Card/index.js":"16","/code/src/components/layouts/Card/Card.jsx":"17","/code/src/components/layouts/Tag/index.js":"18","/code/src/components/layouts/Tag/Tag.jsx":"19","/code/src/components/layouts/Control/index.js":"20","/code/src/components/layouts/Control/Control.jsx":"21","/code/src/components/layouts/Detail/index.js":"22","/code/src/components/layouts/Detail/Detail.jsx":"23","/code/src/components/layouts/Stakeholder/index.js":"24","/code/src/components/layouts/Stakeholder/Stakeholder.jsx":"25","/code/src/components/layouts/InformationElement/index.js":"26","/code/src/components/layouts/InformationElement/InformationElement.jsx":"27","/code/src/redux/reducers/informationElementReducer.js":"28","/code/src/redux/reducers/relationshipReducer.js":"29","/code/src/redux/reducers/applicationReducer.js":"30","/code/src/redux/reducers/stakeholderReducer.js":"31","/code/src/redux/actions/stakeholderActions.js":"32","/code/src/redux/types.js":"33","/code/src/utils/environment.js":"34","/code/src/redux/actions/informationElementsActions.js":"35","/code/src/redux/actions/relationsActions.js":"36","/code/src/redux/actions/applicationActions.js":"37","/code/src/utils/colors.js":"38","/code/src/components/layouts/Visualization/Visualization.jsx":"39","/code/src/utils/d3.js":"40","/code/src/redux/reducers/helpReducer.js":"41","/code/src/redux/actions/helpActions.js":"42","/code/src/utils/app.utils.js":"43","/code/src/redux/actions/index.js":"44","/code/src/redux/actions/vizActions.js":"45","/code/src/redux/reducers/vizReducer.js":"46"},{"size":540,"mtime":1616859885444,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1607786260395,"results":"49","hashOfConfig":"48"},{"size":523,"mtime":1619997118483,"results":"50","hashOfConfig":"48"},{"size":391,"mtime":1614975704084,"results":"51","hashOfConfig":"48"},{"size":603,"mtime":1620085019093,"results":"52","hashOfConfig":"48"},{"size":55,"mtime":1615040244811,"results":"53","hashOfConfig":"48"},{"size":442,"mtime":1615040648480,"results":"54","hashOfConfig":"48"},{"size":49,"mtime":1615043371606,"results":"55","hashOfConfig":"48"},{"size":27377,"mtime":1620104436778,"results":"56","hashOfConfig":"48"},{"size":0,"mtime":1614987955111,"results":"57","hashOfConfig":"48"},{"size":55,"mtime":1615043553473,"results":"58","hashOfConfig":"48"},{"size":724,"mtime":1615063282606,"results":"59","hashOfConfig":"48"},{"size":0,"mtime":1614975704078,"results":"60","hashOfConfig":"48"},{"size":61,"mtime":1615063152748,"results":"61","hashOfConfig":"48"},{"size":2699,"mtime":1619998211946,"results":"62","hashOfConfig":"48"},{"size":49,"mtime":1615071417859,"results":"63","hashOfConfig":"48"},{"size":1835,"mtime":1617799853284,"results":"64","hashOfConfig":"48"},{"size":46,"mtime":1615078643059,"results":"65","hashOfConfig":"48"},{"size":528,"mtime":1617799853286,"results":"66","hashOfConfig":"48"},{"size":58,"mtime":1615219058338,"results":"67","hashOfConfig":"48"},{"size":11859,"mtime":1620001147521,"results":"68","hashOfConfig":"48"},{"size":55,"mtime":1615225040581,"results":"69","hashOfConfig":"48"},{"size":2025,"mtime":1620000991540,"results":"70","hashOfConfig":"48"},{"size":70,"mtime":1616859885441,"results":"71","hashOfConfig":"48"},{"size":26250,"mtime":1619997298013,"results":"72","hashOfConfig":"48"},{"size":91,"mtime":1616859885439,"results":"73","hashOfConfig":"48"},{"size":25424,"mtime":1619997277960,"results":"74","hashOfConfig":"48"},{"size":661,"mtime":1617799853290,"results":"75","hashOfConfig":"48"},{"size":517,"mtime":1617799853290,"results":"76","hashOfConfig":"48"},{"size":1017,"mtime":1617799853289,"results":"77","hashOfConfig":"48"},{"size":533,"mtime":1617799853290,"results":"78","hashOfConfig":"48"},{"size":709,"mtime":1617799853289,"results":"79","hashOfConfig":"48"},{"size":793,"mtime":1620084500960,"results":"80","hashOfConfig":"48"},{"size":163,"mtime":1616859894226,"results":"81","hashOfConfig":"48"},{"size":788,"mtime":1617799853289,"results":"82","hashOfConfig":"48"},{"size":750,"mtime":1617799853289,"results":"83","hashOfConfig":"48"},{"size":1210,"mtime":1620101870835,"results":"84","hashOfConfig":"48"},{"size":122,"mtime":1617799853291,"results":"85","hashOfConfig":"48"},{"size":4039,"mtime":1620096640555,"results":"86","hashOfConfig":"48"},{"size":11780,"mtime":1620103986899,"results":"87","hashOfConfig":"48"},{"size":326,"mtime":1619997583845,"results":"88","hashOfConfig":"48"},{"size":589,"mtime":1619998207834,"results":"89","hashOfConfig":"48"},{"size":791,"mtime":1620081785033,"results":"90","hashOfConfig":"48"},{"size":0,"mtime":1614975704083,"results":"91","hashOfConfig":"48"},{"size":340,"mtime":1620086045352,"results":"92","hashOfConfig":"48"},{"size":438,"mtime":1620084656954,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"a83vg7",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"96"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"/code/src/index.js",[],["193","194"],"/code/src/reportWebVitals.js",[],"/code/src/components/App.js",[],"/code/src/redux/store.js",[],"/code/src/redux/reducers/index.js",[],"/code/src/components/pages/Splash/index.js",[],["195","196"],"/code/src/components/pages/Splash/Splash.jsx",[],"/code/src/components/pages/Home/index.js",[],"/code/src/components/pages/Home/Home.jsx",["197","198","199","200","201"],"/code/src/components/pages/index.js",[],"/code/src/components/layouts/Header/index.js",[],"/code/src/components/layouts/Header/Header.jsx",[],"/code/src/components/layouts/index.js",[],["202","203"],"/code/src/components/layouts/Dropdown/index.js",[],"/code/src/components/layouts/Dropdown/Dropdown.jsx",["204"],"import { React, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./_dropdown.scss\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faCaretDown,\n    faInfoCircle,\n    faCog,\n    faSignOutAlt,\n    faLayerGroup\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { toggleHelp } from \"../../../redux/actions/helpActions\";\nimport { handleTipPosition } from \"../../../utils/app.utils\";\n\nconst Dropdown = ({ help, toggleHelp }) => {\n    const refDropdown = useRef(null);\n\n    const toggleDropdown = event => {\n        if (refDropdown.current?.open) {\n            if (event !== undefined) {\n                event.preventDefault();\n            }\n            refDropdown.current.open = false;\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener(\"click\", () => {\n            toggleDropdown();\n        });\n    }, []);\n\n    const startHelp = e => {\n        toggleHelp();\n        document.querySelectorAll(\"[data-tip]\").forEach((element) => {\n            element.removeEventListener(\"mouseenter\", handleTipPosition);\n            element.addEventListener(\"mouseenter\", handleTipPosition);\n        });\n    };\n\n    return (\n        <details className=\"dropdown\" ref={refDropdown}>\n            <summary className=\"dropdown__toggle\" onClick={toggleDropdown}>\n                <FontAwesomeIcon icon={faCog} fixedWidth />\n                <FontAwesomeIcon icon={faCaretDown} fixedWidth size=\"sm\" />\n            </summary>\n            <div className=\"dropdown__menu\">\n                <div className=\"dropdown__item\">\n                    <FontAwesomeIcon icon={faLayerGroup} fixedWidth size=\"md\" />\n                    <Link to=\"/\">Your applications</Link>\n                </div>\n                <div className=\"dropdown__devider\"></div>\n                <div className=\"dropdown__item\" onClick={e => startHelp(e)}>\n                    <FontAwesomeIcon icon={faInfoCircle} fixedWidth size=\"md\" />\n                    <a href=\"#\" to=\"/\">\n                        Help\n                    </a>\n                </div>\n                <div className=\"dropdown__item\">\n                    <FontAwesomeIcon icon={faCog} fixedWidth size=\"md\" />\n                    <Link to=\"/\">Settings</Link>\n                </div>\n                <div className=\"dropdown__item\">\n                    <FontAwesomeIcon icon={faSignOutAlt} fixedWidth size=\"md\" />\n                    <Link to=\"/\">Sign out</Link>\n                </div>\n            </div>\n        </details>\n    );\n};\n\nconst mapSateToProps = state => ({\n    help: state.help.help\n});\n\nexport default connect(mapSateToProps, {\n    toggleHelp\n})(Dropdown);\n","/code/src/components/layouts/Card/index.js",[],"/code/src/components/layouts/Card/Card.jsx",[],"/code/src/components/layouts/Tag/index.js",[],"/code/src/components/layouts/Tag/Tag.jsx",[],"/code/src/components/layouts/Control/index.js",[],"/code/src/components/layouts/Control/Control.jsx",["205"],"import { React, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Skeleton from \"react-loading-skeleton\";\n\nimport \"./_control.scss\";\n\nimport Tag from \"../Tag\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faChevronDown,\n    faChevronUp,\n    faSpinner\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Control = ({ application, stakeholder, informationElement, help }) => {\n    let [isOpen, setIsOpen] = useState(false);\n\n    const handleToggle = () => {\n        setIsOpen(!isOpen);\n    };\n\n    if (application.loading) {\n        return (\n            <div className=\"control control-collapsed\">\n                <FontAwesomeIcon\n                    className=\"spinner\"\n                    icon={faSpinner}\n                    size=\"lg\"\n                />\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <div className={\"control \" + (isOpen ? \"\" : \"control-collapsed\")}>\n                <div className=\"control__header\">\n                    <div className=\"control__left\">\n                        {application.loading ? (\n                            <h2>{application.application?.name}</h2>\n                        ) : (\n                            <h2>{application.application?.name}</h2>\n                        )}\n                    </div>\n                    <div className=\"control__right\">\n                        {/* <FontAwesomeIcon\n                            icon={faInfo}\n                            fixedWidth\n                            size=\"sm\"\n                        />\n                        <a href=\"\">read transparency note</a> */}\n                        <div className=\"control__info\">\n                            <p\n                                style={{\n                                    margin: \"0\",\n                                    marginTop: \"-1px\"\n                                }}\n                                className={help ? \"tip\" : \"\"}\n                                data-tip=\"0\"\n                            >\n                                Stakeholders\n                                {help && (\n                                    <div className=\"tooltip__wrapper\">\n                                        <span className=\"help__text\">\n                                            <b>Stakeholders</b> are the people\n                                            that use the service or the\n                                            software, departements,\n                                            organisations, etc., which are\n                                            involved in the information exchange\n                                            process, providing, receiving, or\n                                            requesting transparency. We can\n                                            group stakeholders by one entity,\n                                            for example User or IT Department.\n                                            However, the exchanged information\n                                            within an information exchange\n                                            system may concern all stakeholders\n                                            within that system, or it may\n                                            concern the public audience.\n                                        </span>\n                                    </div>\n                                )}\n                            </p>\n                            <Tag\n                                content={\n                                    stakeholder.stakeholders &&\n                                    stakeholder.stakeholders.length\n                                }\n                                color=\"#3d4659\"\n                            />\n                        </div>\n                        <div className=\"control__info\">\n                            <p\n                                style={{\n                                    margin: \"0\",\n                                    marginTop: \"-1px\"\n                                }}\n                                className={help ? \"tip\" : \"\"}\n                                data-tip=\"0\"\n                            >\n                                Policy\n                                {help && (\n                                    <div className=\"tooltip__wrapper\">\n                                        <span className=\"help__text\">\n                                            <b>Policy transparency</b> every\n                                            question whose answer provides\n                                            goals, intentions, policies and\n                                            decision making is a policy\n                                            transparency question. “Why?” is the\n                                            main question here, i.e., why\n                                            certain action is performed or for\n                                            what reason this action is performed\n                                            in the context of transparency. For\n                                            example, in a hosting service\n                                            platform, policy transparency\n                                            reveals why encryption is needed in\n                                            servers, or why I have a limited\n                                            storage capacity.\n                                        </span>\n                                    </div>\n                                )}\n                            </p>\n                            <Tag\n                                content={\n                                    informationElement.informationElements?.filter(\n                                        i => {\n                                            return i.type === \"policy\";\n                                        }\n                                    ).length\n                                }\n                                color=\"#3d4659\"\n                            />\n                        </div>\n                        <div className=\"control__info\">\n                            <p\n                                style={{\n                                    margin: \"0\",\n                                    marginTop: \"-1px\"\n                                }}\n                                className={help ? \"tip\" : \"\"}\n                                data-tip=\"0\"\n                            >\n                                Process\n                                {help && (\n                                    <div className=\"tooltip__wrapper\">\n                                        <span className=\"help__text\">\n                                            <b>Process transparency</b> every\n                                            question whose answer provides\n                                            procedures, processes, behaviours\n                                            and interactions is a process\n                                            transparency question. “How?” is the\n                                            main question here, i.e., how\n                                            something is performed or done in\n                                            the context of transparency. For\n                                            example in a hosting service\n                                            platform, process transparency\n                                            reveals how data is encrypted in the\n                                            servers, and how servers are immune\n                                            from cyber attacks.\n                                        </span>\n                                    </div>\n                                )}\n                            </p>\n                            <Tag\n                                content={\n                                    informationElement.informationElements?.filter(\n                                        i => {\n                                            return i.type === \"process\";\n                                        }\n                                    ).length\n                                }\n                                color=\"#3d4659\"\n                            />\n                        </div>\n                        <div className=\"control__info\">\n                            <p\n                                style={{\n                                    margin: \"0\",\n                                    marginTop: \"-1px\"\n                                }}\n                                className={help ? \"tip\" : \"\"}\n                                data-tip=\"0\"\n                            >\n                                Data\n                                {help && (\n                                    <div className=\"tooltip__wrapper\">\n                                        <span className=\"help__text\">\n                                            <b>Data transparency</b> every\n                                            question whose answer provides data,\n                                            content or information is a data\n                                            transparency question. “What? When?\n                                            Where? Who?” These questions\n                                            primarily answer what information is\n                                            needed and who are the stakeholders\n                                            in the context of transparency. For\n                                            example, in a hosting service\n                                            platform, data transparency reveals\n                                            the server's performances to the\n                                            client for each plan, and the price\n                                            of each plan.\n                                        </span>\n                                    </div>\n                                )}\n                            </p>\n                            <Tag\n                                content={\n                                    informationElement.informationElements?.filter(\n                                        i => {\n                                            return i.type === \"data\";\n                                        }\n                                    ).length\n                                }\n                                color=\"#3d4659\"\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"control__bottom\">\n                    <div\n                        className={\n                            \"control__pannel\" +\n                            (isOpen ? \"\" : \" control__pannel-callapsed\")\n                        }\n                    >\n                        <p>✏️ Control here ...</p>\n                    </div>\n\n                    <div\n                        className=\"control__toggle\"\n                        onClick={handleToggle}\n                        title=\"Toggle menu\"\n                    >\n                        <FontAwesomeIcon icon={faChevronUp} size=\"sm\" />\n                        <FontAwesomeIcon icon={faChevronDown} size=\"sm\" />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nconst mapSateToProps = state => ({\n    application: state.application,\n    stakeholder: state.stakeholder,\n    informationElement: state.informationElement,\n    help: state.help.help\n});\n\nexport default connect(mapSateToProps)(Control);\n","/code/src/components/layouts/Detail/index.js",[],"/code/src/components/layouts/Detail/Detail.jsx",[],"/code/src/components/layouts/Stakeholder/index.js",[],"/code/src/components/layouts/Stakeholder/Stakeholder.jsx",[],"/code/src/components/layouts/InformationElement/index.js",[],"/code/src/components/layouts/InformationElement/InformationElement.jsx",[],"/code/src/redux/reducers/informationElementReducer.js",[],"/code/src/redux/reducers/relationshipReducer.js",[],"/code/src/redux/reducers/applicationReducer.js",[],"/code/src/redux/reducers/stakeholderReducer.js",[],"/code/src/redux/actions/stakeholderActions.js",[],"/code/src/redux/types.js",[],"/code/src/utils/environment.js",[],"/code/src/redux/actions/informationElementsActions.js",[],"/code/src/redux/actions/relationsActions.js",[],"/code/src/redux/actions/applicationActions.js",[],"/code/src/utils/colors.js",[],"/code/src/components/layouts/Visualization/Visualization.jsx",["206","207"],"import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./_visualization.scss\";\nimport { chart } from \"../../../utils/d3\";\nimport { setJsonData } from \"../../../redux/actions/vizActions\";\n\nimport { select } from \"d3\";\nexport const d3 = require(\"d3\");\n\nconst Visualization = ({\n    application,\n    stakeholder,\n    informationElement,\n    relationship,\n    jsonData,\n    setJsonData\n}) => {\n    const svgRef = useRef(null);\n\n    const drawViz = ({ nodes, links }) => {\n        const svg = select(svgRef.current);\n\n        chart(svg, { nodes, links });\n    };\n\n    const getVizData = () => {\n        let data = {};\n        data.nodes = [];\n        data.links = [];\n        stakeholder.stakeholders.forEach(stakeholder => {\n            data.nodes.push({\n                id: stakeholder.id,\n                label: stakeholder.label,\n                name: stakeholder.name,\n                group: \"stakeholder\",\n                weight: stakeholder.weight\n            });\n        });\n        informationElement.informationElements.forEach(ie => {\n            data.nodes.push({\n                id: ie.id,\n                label: ie.label,\n                name: ie.name,\n                group: ie.type,\n                weight: ie.weight\n            });\n        });\n        relationship.relations\n            .map(relation => {\n                return {\n                    id: relation.id,\n                    type: relation.type,\n                    stakeholder: stakeholder.stakeholders.find(s => {\n                        return s.id === relation.stakeholder;\n                    }),\n                    information_element: informationElement.informationElements.find(\n                        ie_ => {\n                            return ie_.id === relation.information_element;\n                        }\n                    )\n                };\n            })\n            .forEach(relation => {\n                data.links.push({\n                    source: [\"production\"].includes(relation.type)\n                        ? relation.stakeholder.label\n                        : relation.information_element.label,\n                    target: [\"production\"].includes(relation.type)\n                        ? relation.information_element.label\n                        : relation.stakeholder.label,\n                    type: relation.type\n                });\n            });\n        informationElement.informationElements.forEach(ie => {\n            if (ie.information_elements.length !== 0) {\n                ie.information_elements.forEach(ie_ => {\n                    data.links.push({\n                        source: informationElement.informationElements.find(\n                            ie__ => {\n                                return ie__.id === ie_;\n                            }\n                        ).label,\n                        target: ie.label,\n                        type: \"uses\"\n                    });\n                });\n            }\n        });\n        setJsonData(data);\n        return data;\n    };\n\n    useEffect(() => {\n        if (\n            stakeholder.stakeholders &&\n            informationElement.informationElements &&\n            relationship.relations\n        ) {\n            const data = getVizData();\n            drawViz(data);\n        }\n\n        return () => {\n            const svg = select(svgRef.current);\n            svg.selectAll(\"*\").remove();\n        };\n    }, [\n        stakeholder.stakeholders,\n        informationElement.informationElements,\n        relationship.relations\n    ]);\n\n    // return <div>Hello 👋, I am a Visualization component.</div>;\n    return <svg style={{ marginTop: \"-40px\" }} ref={svgRef}></svg>;\n};\n\nconst mapSateToProps = state => ({\n    application: state.application,\n    stakeholder: state.stakeholder,\n    informationElement: state.informationElement,\n    relationship: state.relationship,\n    jsonData: state.viz.jsonData,\n    root: state.viz.root\n});\n\nexport default connect(mapSateToProps, { setJsonData })(Visualization);\n","/code/src/utils/d3.js",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225"],"/code/src/redux/reducers/helpReducer.js",[],"/code/src/redux/actions/helpActions.js",[],"/code/src/utils/app.utils.js",["226"],"export const handleTipPosition = event => {\n    const elementRect = event.target.getBoundingClientRect();\n    const tipWrapper = event.target.getElementsByClassName(\n        \"tooltip__wrapper\"\n    )[0];\n\n    if (tipWrapper) {\n        tipWrapper.style.top = `${elementRect.y + 2}    px`;\n        tipWrapper.style.left = 0;\n        tipWrapper.style.right = \"auto\";\n        tipWrapper.style.transform = `translate(${elementRect.x}px, 0)`;\n\n        if (event.target.getAttribute(\"data-tip\") == \"0\") {\n            tipWrapper.style.top = `${30}px`;\n        }\n\n        if (elementRect.x + 20 + 250 > window.outerWidth) {\n            tipWrapper.style.transform = `translate(${elementRect.x -\n                (elementRect.x + 250 - window.outerWidth) -\n                20}px, 0)`;\n        }\n    }\n};\n","/code/src/redux/actions/index.js",[],"/code/src/redux/actions/vizActions.js",[],"/code/src/redux/reducers/vizReducer.js",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"227","replacedBy":"231"},{"ruleId":"229","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":16},{"ruleId":"233","severity":1,"message":"237","line":35,"column":5,"nodeType":"235","messageId":"236","endLine":35,"endColumn":11},{"ruleId":"233","severity":1,"message":"238","line":36,"column":5,"nodeType":"235","messageId":"236","endLine":36,"endColumn":10},{"ruleId":"233","severity":1,"message":"239","line":37,"column":5,"nodeType":"235","messageId":"236","endLine":37,"endColumn":12},{"ruleId":"240","severity":1,"message":"241","line":73,"column":8,"nodeType":"242","endLine":73,"endColumn":10,"suggestions":"243"},{"ruleId":"227","replacedBy":"244"},{"ruleId":"229","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":59,"column":21,"nodeType":"248","endLine":59,"endColumn":40},{"ruleId":"233","severity":1,"message":"234","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":16},{"ruleId":"240","severity":1,"message":"249","line":105,"column":39,"nodeType":"235","endLine":105,"endColumn":46},{"ruleId":"240","severity":1,"message":"250","line":108,"column":8,"nodeType":"242","endLine":112,"endColumn":6,"suggestions":"251"},{"ruleId":"233","severity":1,"message":"252","line":3,"column":10,"nodeType":"235","messageId":"236","endLine":3,"endColumn":20},{"ruleId":"233","severity":1,"message":"253","line":3,"column":22,"nodeType":"235","messageId":"236","endLine":3,"endColumn":35},{"ruleId":"233","severity":1,"message":"254","line":20,"column":5,"nodeType":"235","messageId":"236","endLine":20,"endColumn":21},{"ruleId":"233","severity":1,"message":"255","line":21,"column":5,"nodeType":"235","messageId":"236","endLine":21,"endColumn":14},{"ruleId":"233","severity":1,"message":"256","line":22,"column":5,"nodeType":"235","messageId":"236","endLine":22,"endColumn":17},{"ruleId":"233","severity":1,"message":"257","line":23,"column":5,"nodeType":"235","messageId":"236","endLine":23,"endColumn":16},{"ruleId":"258","severity":1,"message":"259","line":84,"column":13,"nodeType":"260","messageId":"261","endLine":84,"endColumn":17},{"ruleId":"258","severity":1,"message":"259","line":94,"column":13,"nodeType":"260","messageId":"261","endLine":94,"endColumn":17},{"ruleId":"262","severity":1,"message":"263","line":175,"column":5,"nodeType":"264","messageId":"265","endLine":203,"endColumn":78},{"ruleId":"258","severity":1,"message":"259","line":179,"column":13,"nodeType":"260","messageId":"261","endLine":179,"endColumn":17},{"ruleId":"258","severity":1,"message":"259","line":195,"column":13,"nodeType":"260","messageId":"261","endLine":195,"endColumn":17},{"ruleId":"262","severity":1,"message":"263","line":211,"column":5,"nodeType":"264","messageId":"265","endLine":225,"endColumn":76},{"ruleId":"233","severity":1,"message":"266","line":275,"column":11,"nodeType":"235","messageId":"236","endLine":275,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":284,"column":13,"nodeType":"260","messageId":"261","endLine":284,"endColumn":17},{"ruleId":"233","severity":1,"message":"267","line":291,"column":11,"nodeType":"235","messageId":"236","endLine":291,"endColumn":15},{"ruleId":"233","severity":1,"message":"268","line":338,"column":11,"nodeType":"235","messageId":"236","endLine":338,"endColumn":15},{"ruleId":"233","severity":1,"message":"269","line":351,"column":11,"nodeType":"235","messageId":"236","endLine":351,"endColumn":17},{"ruleId":"258","severity":1,"message":"259","line":368,"column":13,"nodeType":"260","messageId":"261","endLine":368,"endColumn":17},{"ruleId":"270","severity":1,"message":"271","line":13,"column":51,"nodeType":"272","messageId":"261","endLine":13,"endColumn":53},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],["273"],["274"],"no-unused-vars","'Skeleton' is defined but never used.","Identifier","unusedVar","'overed' is defined but never used.","'outed' is defined but never used.","'clicked' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getApplications', 'getInformationElements', 'getRelationships', 'getStakeholders', and 'setApplication'. Either include them or remove the dependency array. If 'getApplications' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["275"],["273"],["274"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The ref value 'svgRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'svgRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'getVizData'. Either include it or remove the dependency array.",["276"],"'setFocused' is defined but never used.","'removeFocused' is defined but never used.","'colorStakeholder' is assigned a value but never used.","'colorData' is assigned a value but never used.","'colorProcess' is assigned a value but never used.","'colorPolicy' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'arcDraw' is assigned a value but never used.","'node' is assigned a value but never used.","'link' is assigned a value but never used.","'circle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation",{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},"Update the dependencies array to be: [getApplications, getInformationElements, getRelationships, getStakeholders, setApplication]",{"range":"281","text":"282"},"Update the dependencies array to be: [stakeholder.stakeholders, informationElement.informationElements, relationship.relations, getVizData]",{"range":"283","text":"284"},[2070,2072],"[getApplications, getInformationElements, getRelationships, getStakeholders, setApplication]",[3442,3562],"[stakeholder.stakeholders, informationElement.informationElements, relationship.relations, getVizData]"]