[{"/code/src/index.js":"1","/code/src/reportWebVitals.js":"2","/code/src/components/App.js":"3","/code/src/redux/store.js":"4","/code/src/redux/reducers/index.js":"5","/code/src/components/pages/Splash/index.js":"6","/code/src/components/pages/Splash/Splash.jsx":"7","/code/src/components/pages/Home/index.js":"8","/code/src/components/pages/Home/Home.jsx":"9","/code/src/components/pages/index.js":"10","/code/src/components/layouts/Header/index.js":"11","/code/src/components/layouts/Header/Header.jsx":"12","/code/src/components/layouts/index.js":"13","/code/src/components/layouts/Dropdown/index.js":"14","/code/src/components/layouts/Dropdown/Dropdown.jsx":"15","/code/src/components/layouts/Card/index.js":"16","/code/src/components/layouts/Card/Card.jsx":"17","/code/src/components/layouts/Tag/index.js":"18","/code/src/components/layouts/Tag/Tag.jsx":"19","/code/src/components/layouts/Control/index.js":"20","/code/src/components/layouts/Control/Control.jsx":"21","/code/src/components/layouts/Detail/index.js":"22","/code/src/components/layouts/Detail/Detail.jsx":"23","/code/src/components/layouts/Stakeholder/index.js":"24","/code/src/components/layouts/Stakeholder/Stakeholder.jsx":"25","/code/src/components/layouts/InformationElement/index.js":"26","/code/src/components/layouts/InformationElement/InformationElement.jsx":"27","/code/src/redux/reducers/informationElementReducer.js":"28","/code/src/redux/reducers/relationshipReducer.js":"29","/code/src/redux/reducers/applicationReducer.js":"30","/code/src/redux/reducers/stakeholderReducer.js":"31","/code/src/redux/actions/stakeholderActions.js":"32","/code/src/redux/types.js":"33","/code/src/utils/environment.js":"34","/code/src/redux/actions/informationElementsActions.js":"35","/code/src/redux/actions/relationsActions.js":"36","/code/src/redux/actions/applicationActions.js":"37","/code/src/utils/colors.js":"38","/code/src/components/layouts/Visualization/Visualization.jsx":"39","/code/src/utils/d3.js":"40"},{"size":540,"mtime":1616859885444,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":1607786260395,"results":"43","hashOfConfig":"42"},{"size":523,"mtime":1615047385272,"results":"44","hashOfConfig":"42"},{"size":391,"mtime":1614975704084,"results":"45","hashOfConfig":"42"},{"size":479,"mtime":1616859894225,"results":"46","hashOfConfig":"42"},{"size":55,"mtime":1615040244811,"results":"47","hashOfConfig":"42"},{"size":442,"mtime":1615040648480,"results":"48","hashOfConfig":"42"},{"size":49,"mtime":1615043371606,"results":"49","hashOfConfig":"42"},{"size":12198,"mtime":1619005396326,"results":"50","hashOfConfig":"42"},{"size":0,"mtime":1614987955111,"results":"51","hashOfConfig":"42"},{"size":55,"mtime":1615043553473,"results":"52","hashOfConfig":"42"},{"size":724,"mtime":1615063282606,"results":"53","hashOfConfig":"42"},{"size":0,"mtime":1614975704078,"results":"54","hashOfConfig":"42"},{"size":61,"mtime":1615063152748,"results":"55","hashOfConfig":"42"},{"size":2037,"mtime":1619557747702,"results":"56","hashOfConfig":"42"},{"size":49,"mtime":1615071417859,"results":"57","hashOfConfig":"42"},{"size":1835,"mtime":1617799853284,"results":"58","hashOfConfig":"42"},{"size":46,"mtime":1615078643059,"results":"59","hashOfConfig":"42"},{"size":528,"mtime":1617799853286,"results":"60","hashOfConfig":"42"},{"size":58,"mtime":1615219058338,"results":"61","hashOfConfig":"42"},{"size":5957,"mtime":1617799853285,"results":"62","hashOfConfig":"42"},{"size":55,"mtime":1615225040581,"results":"63","hashOfConfig":"42"},{"size":1534,"mtime":1617799853285,"results":"64","hashOfConfig":"42"},{"size":70,"mtime":1616859885441,"results":"65","hashOfConfig":"42"},{"size":21696,"mtime":1617799853286,"results":"66","hashOfConfig":"42"},{"size":91,"mtime":1616859885439,"results":"67","hashOfConfig":"42"},{"size":21569,"mtime":1617799853286,"results":"68","hashOfConfig":"42"},{"size":661,"mtime":1617799853290,"results":"69","hashOfConfig":"42"},{"size":517,"mtime":1617799853290,"results":"70","hashOfConfig":"42"},{"size":1017,"mtime":1617799853289,"results":"71","hashOfConfig":"42"},{"size":533,"mtime":1617799853290,"results":"72","hashOfConfig":"42"},{"size":709,"mtime":1617799853289,"results":"73","hashOfConfig":"42"},{"size":667,"mtime":1617799853291,"results":"74","hashOfConfig":"42"},{"size":163,"mtime":1616859894226,"results":"75","hashOfConfig":"42"},{"size":788,"mtime":1617799853289,"results":"76","hashOfConfig":"42"},{"size":750,"mtime":1617799853289,"results":"77","hashOfConfig":"42"},{"size":1210,"mtime":1617799853288,"results":"78","hashOfConfig":"42"},{"size":122,"mtime":1617799853291,"results":"79","hashOfConfig":"42"},{"size":3807,"mtime":1618962676595,"results":"80","hashOfConfig":"42"},{"size":8373,"mtime":1619005427924,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"a83vg7",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"84"},"/code/src/index.js",[],["169","170"],"/code/src/reportWebVitals.js",[],"/code/src/components/App.js",[],"/code/src/redux/store.js",[],"/code/src/redux/reducers/index.js",[],"/code/src/components/pages/Splash/index.js",[],["171","172"],"/code/src/components/pages/Splash/Splash.jsx",[],"/code/src/components/pages/Home/index.js",[],"/code/src/components/pages/Home/Home.jsx",["173","174"],"import { React, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Skeleton from \"react-loading-skeleton\";\n\n// Actions\nimport { getStakeholders } from \"../../../redux/actions/stakeholderActions\";\nimport { getInformationElements } from \"../../../redux/actions/informationElementsActions\";\nimport { getRelationships } from \"../../../redux/actions/relationsActions\";\nimport {\n    getApplications,\n    setApplication,\n    setFocused,\n    removeFocused\n} from \"../../../redux/actions/applicationActions\";\n\nimport Header from \"../../layouts/Header\";\nimport Card from \"../../layouts/Card\";\nimport Tag from \"../../layouts/Tag\";\nimport Control from \"../../layouts/Control\";\nimport Detail from \"../../layouts/Detail\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faExpand,\n    // faSearchPlus,\n    // faSearchMinus ,\n    faCompress\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./_home.scss\";\nimport { colors } from \"../../../utils/colors\";\nimport Visualization from \"../../layouts/Visualization/Visualization\";\n\nconst Home = ({\n    application,\n    stakeholder,\n    informationElement,\n    relationship,\n\n    getStakeholders,\n    getInformationElements,\n    getRelationships,\n    getApplications,\n    setApplication,\n    setFocused,\n    removeFocused\n}) => {\n    const [expanded, setExpanded] = useState(true);\n    const handleToggleViz = () => {\n        setExpanded(!expanded);\n    };\n\n    useEffect(() => {\n        const selectedApp = 2;\n        getApplications().then(() => {\n            setApplication(selectedApp);\n        });\n        getStakeholders({ application: selectedApp });\n        getInformationElements({ application: selectedApp });\n        getRelationships({ stakeholder__application: selectedApp });\n    }, []);\n\n    const handleCardClick = (event, element) => {\n        event.preventDefault();\n        if (!application.focused) {\n            setFocused(element);\n        } else {\n            if (application.focused === element) {\n                removeFocused(element);\n            } else {\n                setFocused(element);\n            }\n        }\n    };\n\n    return (\n        <>\n            <div className=\"home\">\n                <Header />\n\n                <div className=\"home__content\">\n                    <div className=\"home__top\">\n                        <Control />\n                    </div>\n                    <div className=\"home__bottom\">\n                        <div\n                            className={\n                                \"home__grid\" + (expanded ? \"\" : \"-expanded\")\n                            }\n                        >\n                            <div className=\"home__left\">\n                                <div className=\"home__navigation\">\n                                    <div className=\"home__navinfo\">\n                                        <div\n                                            className=\"home__navcolor\"\n                                            style={{ borderColor: \"#4A6FA5\" }}\n                                        ></div>\n                                        <span>Stakeholders</span>\n                                    </div>\n                                    <div className=\"home__navinfo\">\n                                        <div\n                                            className=\"home__navcolor\"\n                                            style={{ borderColor: \"#FB5012\" }}\n                                        ></div>\n                                        <span>Policy</span>\n                                    </div>\n                                    <div className=\"home__navinfo\">\n                                        <div\n                                            className=\"home__navcolor\"\n                                            style={{ borderColor: \"#61C9A8\" }}\n                                        ></div>\n                                        <span>Process</span>\n                                    </div>\n                                    <div className=\"home__navinfo\">\n                                        <div\n                                            className=\"home__navcolor\"\n                                            style={{ borderColor: \"#FFDA0A\" }}\n                                        ></div>\n                                        <span>Data</span>\n                                    </div>\n                                </div>\n                                <br />\n                                <div\n                                    className=\"d-flex\"\n                                    style={{ marginBottom: \"20px\" }}\n                                >\n                                    <h3\n                                        style={{\n                                            margin: \"0\",\n                                            marginTop: \"-1px\"\n                                        }}\n                                    >\n                                        Stakeholders\n                                    </h3>\n                                    {stakeholder.loading ? (\n                                        <Tag isLoading={true} />\n                                    ) : (\n                                        <Tag\n                                            content={\n                                                stakeholder.stakeholders?.length\n                                            }\n                                            color=\"#3d4659\"\n                                        />\n                                    )}\n                                </div>\n                                {stakeholder.loading ? (\n                                    <>\n                                        <Card isLoading={true} />\n                                        <Card isLoading={true} />\n                                        <Card isLoading={true} />\n                                    </>\n                                ) : !stakeholder.stakeholders ||\n                                  !stakeholder.stakeholders.length ? (\n                                    <div>Empty...</div>\n                                ) : (\n                                    <>\n                                        {stakeholder.stakeholders.map(s => (\n                                            <Card\n                                                key={s.id}\n                                                label={s.label}\n                                                name={s.name}\n                                                color=\"#4A6FA5\"\n                                                onClick={e =>\n                                                    handleCardClick(e, s)\n                                                }\n                                            />\n                                        ))}\n                                    </>\n                                )}\n                                <br />\n                                <div\n                                    className=\"d-flex\"\n                                    style={{ marginBottom: \"20px\" }}\n                                >\n                                    <h3\n                                        style={{\n                                            margin: \"0\",\n                                            marginTop: \"-1px\"\n                                        }}\n                                    >\n                                        Information elements\n                                    </h3>\n                                    {informationElement.loading ? (\n                                        <Tag isLoading={true} />\n                                    ) : (\n                                        <Tag\n                                            content={\n                                                informationElement\n                                                    .informationElements?.length\n                                            }\n                                            color=\"#3d4659\"\n                                        />\n                                    )}\n                                </div>\n                                {informationElement.loading ? (\n                                    <>\n                                        <Card isLoading={true} />\n                                        <Card isLoading={true} />\n                                        <Card isLoading={true} />\n                                        <Card isLoading={true} />\n                                    </>\n                                ) : !informationElement.informationElements ||\n                                  !informationElement.informationElements\n                                      .length ? (\n                                    <div>Empty...</div>\n                                ) : (\n                                    <>\n                                        {informationElement.informationElements.map(\n                                            ie => (\n                                                <Card\n                                                    key={ie.id}\n                                                    label={ie.label}\n                                                    name={ie.name}\n                                                    color={colors[ie.type]}\n                                                    onClick={e =>\n                                                        handleCardClick(e, ie)\n                                                    }\n                                                />\n                                            )\n                                        )}\n                                    </>\n                                )}\n                            </div>\n                            <div className=\"home__middle\">\n                                <div\n                                    className=\"home__expand\"\n                                    style={{ right: expanded ? \"14px\" : 0 }}\n                                >\n                                    <FontAwesomeIcon\n                                        icon={expanded ? faExpand : faCompress}\n                                        size=\"lg\"\n                                        fixedWidth\n                                        className=\"icon\"\n                                        onClick={handleToggleViz}\n                                    />\n                                    {/* <FontAwesomeIcon\n                                        icon={faSearchPlus}\n                                        size=\"lg\"\n                                        fixedWidth\n                                        className=\"icon\"\n                                    />\n                                    <FontAwesomeIcon\n                                        icon={faSearchMinus}\n                                        size=\"lg\"\n                                        fixedWidth\n                                        className=\"icon\"\n                                    /> */}\n                                </div>\n                                <Visualization />\n                            </div>\n                            <div\n                                className={\n                                    \"home__right\" +\n                                    (expanded ? \"\" : \"-expanded\")\n                                }\n                            >\n                                <Detail />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nconst mapSateToProps = state => ({\n    application: state.application,\n    stakeholder: state.stakeholder,\n    informationElement: state.informationElement,\n    relationship: state.relationship\n});\n\nexport default connect(mapSateToProps, {\n    getStakeholders,\n    getInformationElements,\n    getRelationships,\n    getApplications,\n    setApplication,\n    setFocused,\n    removeFocused\n})(Home);\n","/code/src/components/pages/index.js",[],"/code/src/components/layouts/Header/index.js",[],"/code/src/components/layouts/Header/Header.jsx",[],"/code/src/components/layouts/index.js",[],["175","176"],"/code/src/components/layouts/Dropdown/index.js",[],"/code/src/components/layouts/Dropdown/Dropdown.jsx",[],"/code/src/components/layouts/Card/index.js",[],"/code/src/components/layouts/Card/Card.jsx",[],"/code/src/components/layouts/Tag/index.js",[],"/code/src/components/layouts/Tag/Tag.jsx",[],"/code/src/components/layouts/Control/index.js",[],"/code/src/components/layouts/Control/Control.jsx",["177"],"import { React, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Skeleton from \"react-loading-skeleton\";\n\nimport \"./_control.scss\";\n\nimport Tag from \"../Tag\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faChevronDown,\n    faChevronUp,\n    faSpinner\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Control = ({ application, stakeholder, informationElement }) => {\n    let [isOpen, setIsOpen] = useState(false);\n\n    const handleToggle = () => {\n        setIsOpen(!isOpen);\n    };\n\n    if (application.loading) {\n        return (\n            <div className=\"control control-collapsed\">\n                <FontAwesomeIcon className=\"spinner\" icon={faSpinner} size=\"lg\" />\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <div className={\"control \" + (isOpen ? \"\" : \"control-collapsed\")}>\n                <div className=\"control__header\">\n                    <div className=\"control__left\">\n                        {application.loading ? (\n                            <h2>{application.application?.name}</h2>\n                        ) : (\n                            <h2>{application.application?.name}</h2>\n                        )}\n                    </div>\n                    <div className=\"control__right\">\n                        {/* <FontAwesomeIcon\n                            icon={faInfo}\n                            fixedWidth\n                            size=\"sm\"\n                        />\n                        <a href=\"\">read transparency note</a> */}\n                        <div className=\"control__info\">\n                            <p\n                                style={{\n                                    margin: \"0\",\n                                    marginTop: \"-1px\"\n                                }}\n                            >\n                                Stakeholders\n                            </p>\n                            <Tag\n                                content={\n                                    stakeholder.stakeholders &&\n                                    stakeholder.stakeholders.length\n                                }\n                                color=\"#3d4659\"\n                            />\n                        </div>\n                        <div className=\"control__info\">\n                            <p\n                                style={{\n                                    margin: \"0\",\n                                    marginTop: \"-1px\"\n                                }}\n                            >\n                                Policy\n                            </p>\n                            <Tag\n                                content={\n                                    informationElement.informationElements?.filter(\n                                        i => {\n                                            return i.type === \"policy\";\n                                        }\n                                    ).length\n                                }\n                                color=\"#3d4659\"\n                            />\n                        </div>\n                        <div className=\"control__info\">\n                            <p\n                                style={{\n                                    margin: \"0\",\n                                    marginTop: \"-1px\"\n                                }}\n                            >\n                                Process\n                            </p>\n                            <Tag\n                                content={\n                                    informationElement.informationElements?.filter(\n                                        i => {\n                                            return i.type === \"process\";\n                                        }\n                                    ).length\n                                }\n                                color=\"#3d4659\"\n                            />\n                        </div>\n                        <div className=\"control__info\">\n                            <p\n                                style={{\n                                    margin: \"0\",\n                                    marginTop: \"-1px\"\n                                }}\n                            >\n                                Data\n                            </p>\n                            <Tag\n                                content={\n                                    informationElement.informationElements?.filter(\n                                        i => {\n                                            return i.type === \"data\";\n                                        }\n                                    ).length\n                                }\n                                color=\"#3d4659\"\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"control__bottom\">\n                    <div\n                        className={\n                            \"control__pannel\" +\n                            (isOpen ? \"\" : \" control__pannel-callapsed\")\n                        }\n                    >\n                        <p>✏️ Control here ...</p>\n                    </div>\n\n                    <div\n                        className=\"control__toggle\"\n                        onClick={handleToggle}\n                        title=\"Toggle menu\"\n                    >\n                        <FontAwesomeIcon icon={faChevronUp} size=\"sm\" />\n                        <FontAwesomeIcon icon={faChevronDown} size=\"sm\" />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nconst mapSateToProps = state => ({\n    application: state.application,\n    stakeholder: state.stakeholder,\n    informationElement: state.informationElement\n});\n\nexport default connect(mapSateToProps)(Control);\n","/code/src/components/layouts/Detail/index.js",[],"/code/src/components/layouts/Detail/Detail.jsx",[],"/code/src/components/layouts/Stakeholder/index.js",[],"/code/src/components/layouts/Stakeholder/Stakeholder.jsx",[],"/code/src/components/layouts/InformationElement/index.js",[],"/code/src/components/layouts/InformationElement/InformationElement.jsx",[],"/code/src/redux/reducers/informationElementReducer.js",[],"/code/src/redux/reducers/relationshipReducer.js",[],"/code/src/redux/reducers/applicationReducer.js",[],"/code/src/redux/reducers/stakeholderReducer.js",[],"/code/src/redux/actions/stakeholderActions.js",[],"/code/src/redux/types.js",[],"/code/src/utils/environment.js",[],"/code/src/redux/actions/informationElementsActions.js",[],"/code/src/redux/actions/relationsActions.js",[],"/code/src/redux/actions/applicationActions.js",[],"/code/src/utils/colors.js",[],"/code/src/components/layouts/Visualization/Visualization.jsx",["178","179"],"import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./_visualization.scss\";\nimport { chart } from \"../../../utils/d3\";\n\nimport { select } from \"d3\";\nexport const d3 = require(\"d3\");\n\nconst Visualization = ({\n    application,\n    stakeholder,\n    informationElement,\n    relationship\n}) => {\n    const svgRef = useRef(null);\n\n    const drawViz = ({ nodes, links }) => {\n        const svg = select(svgRef.current);\n\n        chart(svg, { nodes, links });\n    };\n\n    const getVizData = () => {\n        let data = {};\n        data.nodes = [];\n        data.links = [];\n        stakeholder.stakeholders.forEach(stakeholder => {\n            data.nodes.push({\n                id: stakeholder.id,\n                label: stakeholder.label,\n                name: stakeholder.name,\n                group: \"stakeholder\",\n                weight: stakeholder.weight\n            });\n        });\n        informationElement.informationElements.forEach(ie => {\n            data.nodes.push({\n                id: ie.id,\n                label: ie.label,\n                name: ie.name,\n                group: ie.type,\n                weight: ie.weight\n            });\n        });\n        relationship.relations\n            .map(relation => {\n                return {\n                    id: relation.id,\n                    type: relation.type,\n                    stakeholder: stakeholder.stakeholders.find(s => {\n                        return s.id === relation.stakeholder;\n                    }),\n                    information_element: informationElement.informationElements.find(\n                        ie_ => {\n                            return ie_.id === relation.information_element;\n                        }\n                    )\n                };\n            })\n            .forEach(relation => {\n                data.links.push({\n                    source: [\"production\"].includes(relation.type)\n                        ? relation.stakeholder.label\n                        : relation.information_element.label,\n                    target: [\"production\"].includes(relation.type)\n                        ? relation.information_element.label\n                        : relation.stakeholder.label,\n                    type: relation.type\n                });\n            });\n        informationElement.informationElements.forEach(ie => {\n            if (ie.information_elements.length !== 0) {\n                ie.information_elements.forEach(ie_ => {\n                    data.links.push({\n                        source: informationElement.informationElements.find(\n                            ie__ => {\n                                return ie__.id === ie_;\n                            }\n                        ).label,\n                        target: ie.label,\n                        type: \"uses\"\n                    });\n                });\n            }\n        });\n        return data;\n    };\n\n    useEffect(() => {\n        if (\n            stakeholder.stakeholders &&\n            informationElement.informationElements &&\n            relationship.relations\n        ) {\n            const data = getVizData();\n            drawViz(data);\n        }\n\n        return () => {\n            const svg = select(svgRef.current);\n            svg.selectAll(\"*\").remove();\n        }\n    }, [\n        stakeholder.stakeholders,\n        informationElement.informationElements,\n        relationship.relations\n    ]);\n\n    // return <div>Hello 👋, I am a Visualization component.</div>;\n    return <svg ref={svgRef}></svg>;\n};\n\nconst mapSateToProps = state => ({\n    application: state.application,\n    stakeholder: state.stakeholder,\n    informationElement: state.informationElement,\n    relationship: state.relationship\n});\n\nexport default connect(mapSateToProps)(Visualization);\n","/code/src/utils/d3.js",["180","181","182","183","184","185","186","187","188","189","190"],"export const d3 = require(\"d3\");\n\nconst tree = d3.cluster().size([2 * Math.PI, 300]);\n\nconst line = d3\n    .lineRadial()\n    .curve(d3.curveBundle.beta(0.85))\n    .radius(d => d.y)\n    .angle(d => d.x);\n\nconst radius = 340 / 2;\nconst width = 1100;\nconst colornone = \"#ccc\";\n\nfunction bilink(root) {\n    const map = new Map(root.leaves().map(d => [d.data.label, d]));\n\n    for (const d of root.leaves()) {\n        d.incoming = [];\n        d.outgoing = d.data.targets.map(i => [d, map.get(i)]);\n    }\n    for (const d of root.leaves()) {\n        for (const o of d.outgoing) {\n            o[1].incoming.push(o);\n        }\n    }\n    return root;\n}\n\nconst data_ = ({ nodes, links }) => {\n    const groupById = new Map();\n    const nodeById = new Map(nodes.map(node => [node.label, node]));\n\n    for (const node of nodes) {\n        let group = groupById.get(node.group);\n        if (!group) {\n            groupById.set(\n                node.group,\n                (group = { label: node.group, children: [] })\n            );\n        }\n        group.children.push(node);\n        node.targets = [];\n    }\n\n    for (const { source: sourceId, target: targetId } of links) {\n        nodeById.get(sourceId).targets.push(targetId);\n    }\n\n    return { children: [...groupById.values()] };\n};\n\nexport const chart = (svg, { nodes, links }) => {\n    // console.log(svg);\n    const data = data_({ nodes, links });\n    console.log(data);\n\n    var colorStakeholder = \"#4A6FA5\";\n    var colorData = \"#FFDA0A\";\n    var colorProcess = \"#61C9A8\";\n    var colorPolicy = \"#FB5012\";\n\n    const nodeById = new Map(nodes.map(node => [node.label, node]));\n\n    const root = tree(\n        bilink(\n            d3\n                .hierarchy(data)\n                .sort(\n                    (a, b) =>\n                        d3.ascending(a.height, b.height) ||\n                        d3.ascending(a.data.label, b.data.label)\n                )\n        )\n    );\n\n    // console.log(root.descendants().filter(d => d.height == 1));\n\n    // const svg = d3\n    //     .create(\"svg\")\n    //     .attr(\"viewBox\", [-width / 2, -width / 2, width, width]);\n\n    svg.attr(\"viewBox\", [(-width / 2) + 30, -width / 2, width, width]);\n\n    // const arc = d3.arc()\n    //             .innerRadius(radius)\n    //             .outerRadius(radius - 180)\n    //             .startAngle(0)\n    //             .cornerRadius(15)\n    //            .endAngle(Math.PI);\n\n    // 🏛\n    const arc = d3\n        .arc()\n        .innerRadius(radius + 125)\n        .outerRadius(radius + 147)\n        .cornerRadius(5);\n    // .startAngle(d => 0)\n    // .endAngle(d => Math.PI / 4);\n\n    const pie = d3\n        .pie()\n        .value(d => d.leaves().length)\n        .sort(null)\n        .padAngle(0.1);\n    // 🥧\n\n    \n    //arc drawing\n    const arcDraw = svg\n        .append(\"g\")\n        // .attr(\"transform\", d => `rotate(-115)`)\n        .selectAll(\"g\")\n        .data(pie(root.descendants().filter(d => d.height === 1)))\n        .join(\"g\")\n        // .attr(\"transform\", d => `rotate(${d.data.x * -20 / Math.PI - 90})`)\n        .append(\"path\")\n        .attr(\"d\", d => arc(d))\n        .attr(\"fill\", d =>\n            eval(\n                `color${d.data.data.label.charAt(0).toUpperCase() +\n                    d.data.data.label.slice(1)}`\n            )\n        )\n        .style(\"opacity\", \".2\");\n\n    const node = svg\n        .append(\"g\")\n        .attr(\"font-size\", 16)\n        .attr(\"fill\", \"#3D4758\")\n        .selectAll(\"g\")\n        .data(root.leaves())\n        .join(\"g\")\n        .attr(\n            \"transform\",\n            d => `rotate(${(d.x * 180) / Math.PI - 90}) translate(${d.y},0)`\n        )\n        .append(\"text\")\n        .attr(\"dy\", \"0.31em\")\n        .attr(\"dx\", d => (d.x >= Math.PI ? \"-1em\" : \"1em\"))\n        .attr(\"x\", d => (d.x < Math.PI ? 15 : -15))\n        .attr(\"text-anchor\", d => (d.x < Math.PI ? \"start\" : \"end\"))\n        .attr(\"transform\", d => (d.x >= Math.PI ? \"rotate(180)\" : null))\n        // .attr(\"fill\", d =>\n        //     eval(\n        //         `color${d.data.group.charAt(0).toUpperCase() +\n        //             d.data.group.slice(1)}`\n        //     )\n        // )\n        // .attr(\"fill\", colornone\n        // )\n        .style(\"cursor\", \"pointer\")\n        .text(d => nodeById.get(d.data.label).label)\n        //for eadh node,\n        .each(function(d) {\n            d.text = this;\n        })\n        //overed is the behaviour when we have a mouseover on one of the elements(nodes)\n        .on(\"mouseover\", overed)\n\n        .on(\"mouseout\", outed)\n        .call(text =>\n            text\n                .append(\"title\")\n                .text(\n                    d =>\n                        `${nodeById.get(d.data.label).name} ${\n                            d.outgoing.length\n                        } outgoing ${d.incoming.length} incoming`\n                )\n        );\n\n    //link drawing\n    const link = svg\n        .append(\"g\")\n        .attr(\"stroke\", colornone)\n        .attr(\"fill\", \"none\")\n        .selectAll(\"path\")\n        .data(root.leaves().flatMap(leaf => leaf.outgoing))\n        .join(\"path\")\n        .style(\"mix-blend-mode\", \"darken\")\n        .attr(\"d\", ([i, o]) => line(i.path(o)))\n        .each(function(d) {\n            d.path = this;\n        });\n\n    const circle = svg\n        .append(\"g\")\n        .selectAll(\"g\")\n        .data(root.leaves())\n        .join(\"g\")\n        .attr(\n            \"transform\",\n            d => `rotate(${(d.x * 180) / Math.PI - 90}) translate(${d.y},0)`\n        )\n\n        .append(\"circle\") // attach a circle\n        .attr(\"dy\", \"0.31em\")\n        .attr(\"cx\", d => (d.x < Math.PI ? 6 : -6))\n        .attr(\"transform\", d => (d.x >= Math.PI ? \"rotate(180)\" : null))\n\n        .attr(\"r\", d => 8) // set the radius\n        .style(\"fill\", d =>\n            eval(\n                `color${d.data.group.charAt(0).toUpperCase() +\n                    d.data.group.slice(1)}`\n            )\n        )\n        .each(function(d) {\n            d.circle = this;\n        });\n\n    //change link style based on the event(mouseover mouseouted\n    function overed(event, d) {\n        link.style(\"mix-blend-mode\", null);\n        d3.select(this).attr(\"font-weight\", \"bold\");\n        d3.selectAll(d.incoming.map(d => d.path))\n            .data(d.incoming.map(d => d[0]))\n            .attr(\"stroke\", t =>\n                eval(\n                    `color${t.data.group.charAt(0).toUpperCase() +\n                        t.data.group.slice(1)}`\n                )\n            )\n            .attr(\"stroke-width\", 1.5)\n            .raise();\n        // d3.selectAll(d.incoming.map(([d]) => d.text)).attr(\"fill\", colorin).attr(\"font-weight\", \"bold\");\n\n        // d3.selectAll(d.incoming.map(([d]) => d.text)).data(d.incoming).attr(\"fill\", eval(`color${d.data.group.charAt(0).toUpperCase() + d.data.group.slice(1)}`)).attr(\"font-weight\", \"bold\");\n\n        // d3.selectAll(d.incoming.map(([d]) => d.circle)).style(\"fill\", colorin);\n        // d.incoming.filter(d => d.path === path)[0]\n        d3.selectAll(d.outgoing.map(d => d.path))\n            .attr(\n                \"stroke\",\n                eval(\n                    `color${d.data.group.charAt(0).toUpperCase() +\n                        d.data.group.slice(1)}`\n                )\n            )\n            .attr(\"stroke-width\", 1.5)\n            .raise();\n        d3.selectAll(d.outgoing.map(([, d]) => d.text)).attr(\n            \"font-weight\",\n            \"bold\"\n        );\n        // d3.selectAll(d.outgoing.map(([, d]) => d.circle)).style(\"fill\", colorout);\n    }\n    //in outed state, made everything reseted\n    function outed(event, d) {\n        link.style(\"mix-blend-mode\", \"darken\");\n        d3.select(this).attr(\"font-weight\", null);\n        d3.selectAll(d.incoming.map(d => d.path))\n            .attr(\"stroke\", null)\n            .attr(\"stroke-width\", 1);\n        d3.selectAll(d.incoming.map(([d]) => d.text))\n            .attr(\"fill\", null)\n            .attr(\"font-weight\", null);\n        // d3.selectAll(d.incoming.map(([d]) => d.circle)).style(\"fill\", null);\n        d3.selectAll(d.outgoing.map(d => d.path))\n            .attr(\"stroke\", null)\n            .attr(\"stroke-width\", 1);\n        d3.selectAll(d.outgoing.map(([, d]) => d.text))\n            .attr(\"fill\", null)\n            .attr(\"font-weight\", null);\n        // d3.selectAll(d.outgoing.map(([, d]) => d.circle)).style(\"fill\", null);\n    }\n\n    return svg.node();\n};\n",{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"191","replacedBy":"195"},{"ruleId":"193","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":3,"column":8,"nodeType":"199","messageId":"200","endLine":3,"endColumn":16},{"ruleId":"201","severity":1,"message":"202","line":61,"column":8,"nodeType":"203","endLine":61,"endColumn":10,"suggestions":"204"},{"ruleId":"191","replacedBy":"205"},{"ruleId":"193","replacedBy":"206"},{"ruleId":"197","severity":1,"message":"198","line":3,"column":8,"nodeType":"199","messageId":"200","endLine":3,"endColumn":16},{"ruleId":"201","severity":1,"message":"207","line":101,"column":39,"nodeType":"199","endLine":101,"endColumn":46},{"ruleId":"201","severity":1,"message":"208","line":104,"column":8,"nodeType":"203","endLine":108,"endColumn":6,"suggestions":"209"},{"ruleId":"197","severity":1,"message":"210","line":58,"column":9,"nodeType":"199","messageId":"200","endLine":58,"endColumn":25},{"ruleId":"197","severity":1,"message":"211","line":59,"column":9,"nodeType":"199","messageId":"200","endLine":59,"endColumn":18},{"ruleId":"197","severity":1,"message":"212","line":60,"column":9,"nodeType":"199","messageId":"200","endLine":60,"endColumn":21},{"ruleId":"197","severity":1,"message":"213","line":61,"column":9,"nodeType":"199","messageId":"200","endLine":61,"endColumn":20},{"ruleId":"197","severity":1,"message":"214","line":110,"column":11,"nodeType":"199","messageId":"200","endLine":110,"endColumn":18},{"ruleId":"215","severity":1,"message":"216","line":120,"column":13,"nodeType":"217","messageId":"218","endLine":120,"endColumn":17},{"ruleId":"197","severity":1,"message":"219","line":127,"column":11,"nodeType":"199","messageId":"200","endLine":127,"endColumn":15},{"ruleId":"197","severity":1,"message":"220","line":187,"column":11,"nodeType":"199","messageId":"200","endLine":187,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":204,"column":13,"nodeType":"217","messageId":"218","endLine":204,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":220,"column":17,"nodeType":"217","messageId":"218","endLine":220,"endColumn":21},{"ruleId":"215","severity":1,"message":"216","line":236,"column":17,"nodeType":"217","messageId":"218","endLine":236,"endColumn":21},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],["221"],["222"],"no-unused-vars","'Skeleton' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getApplications', 'getInformationElements', 'getRelationships', 'getStakeholders', and 'setApplication'. Either include them or remove the dependency array. If 'getApplications' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["223"],["221"],["222"],"The ref value 'svgRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'svgRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'getVizData'. Either include it or remove the dependency array.",["224"],"'colorStakeholder' is assigned a value but never used.","'colorData' is assigned a value but never used.","'colorProcess' is assigned a value but never used.","'colorPolicy' is assigned a value but never used.","'arcDraw' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","'node' is assigned a value but never used.","'circle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [getApplications, getInformationElements, getRelationships, getStakeholders, setApplication]",{"range":"229","text":"230"},"Update the dependencies array to be: [stakeholder.stakeholders, informationElement.informationElements, relationship.relations, getVizData]",{"range":"231","text":"232"},[1789,1791],"[getApplications, getInformationElements, getRelationships, getStakeholders, setApplication]",[3318,3438],"[stakeholder.stakeholders, informationElement.informationElements, relationship.relations, getVizData]"]